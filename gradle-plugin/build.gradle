buildscript {
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
  }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'bintray'
apply plugin: 'idea'

targetCompatibility = JavaVersion.VERSION_1_6
sourceCompatibility = JavaVersion.VERSION_1_6

dependencies {
  implementation project(':processor')
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

  compileOnly gradleApi()
  compileOnly "com.android.tools.build:gradle:$androidToolsVersion"
  compileOnly "com.android.tools.build:gradle-api:$androidToolsVersion"
}

def generatedDir = new File(projectDir, "generated")
def generatedJavaSourcesDir = new File(generatedDir, "main/java")

task generateBuildClass {
  inputs.property('version', version)
  outputs.dir generatedDir

  doLast {
    def buildClassFile = new File(generatedJavaSourcesDir, "io/michaelrocks/lightsaber/plugin/Build.java")
    buildClassFile.parentFile.mkdirs()
    buildClassFile.text = "" +
        "package io.michaelrocks.lightsaber.plugin;\n" +
        "\n" +
        "public class Build {\n" +
        "    public static final String VERSION = \"$version\";\n" +
        "}\n"
  }
}

sourceSets {
  main {
    output.dir(builtBy: tasks.generateBuildClass, generatedJavaSourcesDir)
    java.srcDirs += generatedJavaSourcesDir
  }
}

tasks.matching { it instanceof AbstractCompile }.forEach {
  it.dependsOn tasks.generateBuildClass
}

clean.doFirst {
  delete generatedDir
}

idea {
  module {
    generatedSourceDirs += generatedJavaSourcesDir
  }
}
